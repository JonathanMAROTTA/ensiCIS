resolver 8.8.8.8 valid=10s; # utilise le DNS publique de Google


# Load-balancing
# See: https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/
upstream juice_shop_cluster {
    # Define Load-Balancing Method
    # - <NO_ARG>    :   round-robin mode
    # - least_conn  :   a request is sent to the server with the least number of active connections,
    #                   with server weights taken into consideration
    # - ip_hash     :   The server to which a request is sent is determined from the client IP address.
    #                   In this case, either the first three octets of the IPv4 address or the whole
    #                   IPv6 address are used to calculate the has
    #                   >>> used to implement sticky sessions
    # - sticky      :   adds a sticky cookie to be always forwarded to the same upstream server.
    #                   /!\ requires nginx-sticky-module-ng !!!
    #                   /!\ NOT COMPATIBLE with 'backup' directive !!!
    # sticky; 
    # Enable sticky sessions (requires Nginx Sticky Module)
    ip_hash;
    
    # List of available nodes
    # - max_fails       :   this directive sets the number of consecutive unsuccessful attempts to communicate with
    #                       the server that should happen during fail_timeout.
    #                       By default, max_fails is set to 1. When it is set to 0, health checks are disabled for this server.
    # - fail_timeout    :   this parameter defines how long the server will be marked as failed.
    #                       After fail_timeout interval following the server failure, nginx will start to gracefully probe the server
    #                       with the live clientâ€™s requests. If the probes have been successful, the server is marked as a live one. 
    
    # server backend1.example.com weight=5;
    # server juice-shop-service.local:3000 resolve;
    server 172.18.0.2:3000;
    # server 172.18.0.2:3000 backup;  # by default 'backup' servers DO NOT receive any request
                                    # >>> is ONLY used if other servers are down or not accessible
    
    
    # Enable health-checking
    # check interval=5000 rise=2 fall=5 timeout=3000;
}
